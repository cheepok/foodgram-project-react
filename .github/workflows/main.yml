name: Foodgram Workflow

on:
  push:
    branches: [ master ]

jobs:

  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort pytest pytest-cov
        pip install -r backend/requirements.txt
    - name: Lint with flake8
      run: |
        python -m flake8 backend/ 
    - name: Run tests
      run: |
        python -m pytest tests/ -rV --cov

  # copy_infra_to_server:
  #   name: Copy docker-compose.yml and nginx.conf
  #   runs-on: ubuntu-latest
  #   needs: tests
  #   steps:
  #   - uses: actions/checkout@v2

  #   - name: Create projects directory
  #     uses: appleboy/ssh-action@master
  #     with:
  #       host: 51.250.95.62
  #       username: ${{ secrets.HOST_USER }}
  #       key: ${{ secrets.SSH_KEY }}
  #       passphrase: ${{ secrets.PASSPHRASE }} 
  #       script: | 
  #         sudo rm -rf foodgram
  #         mkdir -p foodgram

  #   - name: Copy files
  #     uses: garygrossgarten/github-action-scp@release
  #     with:
  #         local: infra/
  #         remote: /${{ secrets.HOST_USER }}/foodgram/
  #         host: 51.250.95.62
  #         username: ${{ secrets.HOST_USER }}
  #         key: ${{ secrets.SSH_KEY }}
  #         passphrase: ${{ secrets.PASSPHRASE }}

  # build_and_push_to_docker_hub: 
  #   name: Push Docker image to Docker Hub
  #   runs-on: ubuntu-latest
  #   needs: tests
  #   if: github.ref == 'refs/heads/master'
  #   steps:
  #     - name: Check out the repo
  #       uses: actions/checkout@v2
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     - name: Login to Docker
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
  #     - name: Push to Docker Hub (backend)
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: ./backend/
  #         file: ./backend/Dockerfile
  #         push: true
  #         tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest
  #     - name: Push to Docker Hub (frontend)
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: ./frontend/
  #         file: ./frontend/Dockerfile
  #         push: true
  #         tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest 
        
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build_and_push_to_docker_hub
  #   if: github.ref == 'refs/heads/master'
  #   steps:
  #     - name: executing remote ssh commands to deploy
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USER }}
  #         key: ${{ secrets.SSH_KEY }}
  #         passphrase: ${{ secrets.PASSPHRASE }}
  #         script: |
  #           sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest
  #           sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest
  #           sudo docker-compose stop
  #           sudo docker-compose rm backend
  #           sudo docker-compose up -d

  
  build_push_backend_to_DockerHub:
    name: Building back image and pushing it to Docker Hub
    runs-on: ubuntu-20.04
    needs: tests
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push "foodgram/backend" to DockerHub
      uses: docker/build-push-action@v2
      with:
        context: backend/
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest

  build_push_frontend_to_DockerHub:
    name: Building front image and pushing it to Docker Hub
    runs-on: ubuntu-20.04
    needs: tests
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push "foodgram/frontend" to DockerHub
      uses: docker/build-push-action@v2
      with:
        context: frontend/
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest

  deploy:
    runs-on: ubuntu-20.04
    needs:
      - build_push_backend_to_DockerHub
      - build_push_frontend_to_DockerHub
    steps:
    - name: remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: 51.250.95.62
        username: ${{ secrets.DOCKER_USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script: |
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest
          sudo docker system prune -f
          sudo docker-compose up -d
        


        # script: |
        #   cd foodgram/
        #   touch .env
        #   echo DEBUG=${{ secrets.DEBUG }} >> .env
        #   echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env 
        #   echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
        #   echo CSRF_TRUSTED_ORIGINS=${{ secrets.CSRF_TRUSTED_ORIGINS }} >> .env
        #   echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
        #   echo DB_NAME=${{ secrets.DB_NAME }} >> .env
        #   echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
        #   echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
        #   echo DB_HOST=${{ secrets.DB_HOST }} >> .env
        #   echo DB_PORT=${{ secrets.DB_PORT }} >> .env

        #   sudo docker-compose stop
        #   sudo docker rmi ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend
        #   sudo docker rmi ${{ secrets.DOCKER_USERNAME }}/foodgram_backend 
        #   sudo docker-compose up -d
      # with:
      #   host: ${{ secrets.HOST_IP }}
      #   username: ${{ secrets.HOST_USER }}
      #   key: ${{ secrets.SSH_KEY }}
      #   passphrase: ${{ secrets.PASSPHRASE }}
      #   script: |
      #     cd projects/foodgram/
      #     touch .env
      #     echo DEBUG=${{ secrets.DEBUG }} >> .env
      #     echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
      #     echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
      #     echo CSRF_TRUSTED_ORIGINS=${{ secrets.CSRF_TRUSTED_ORIGINS }} >> .env
      #     echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
      #     echo DB_NAME=${{ secrets.DB_NAME }} >> .env
      #     echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
      #     echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
      #     echo DB_HOST=${{ secrets.DB_HOST }} >> .env
      #     echo DB_PORT=${{ secrets.DB_PORT }} >> .env

      #     sudo docker-compose stop
      #     sudo docker rm foodgram_frontend_1
      #     sudo docker rm foodgram_backend_1
      #     sudo docker rmi ${{ secrets.DOCKER_USERNAME }}/foodgram_front
      #     sudo docker rmi ${{ secrets.DOCKER_USERNAME }}/foodgram_backend
      #     sudo docker-compose up -d
  
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!
...
